/*
Model Registry REST API

REST API for Model Registry to create and manage ML model metadata

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetadataValueOneOf5 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataValueOneOf5{}

// MetadataValueOneOf5 struct for MetadataValueOneOf5
type MetadataValueOneOf5 struct {
	BoolValue *bool `json:"bool_value,omitempty"`
}

// NewMetadataValueOneOf5 instantiates a new MetadataValueOneOf5 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataValueOneOf5() *MetadataValueOneOf5 {
	this := MetadataValueOneOf5{}
	return &this
}

// NewMetadataValueOneOf5WithDefaults instantiates a new MetadataValueOneOf5 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataValueOneOf5WithDefaults() *MetadataValueOneOf5 {
	this := MetadataValueOneOf5{}
	return &this
}

// GetBoolValue returns the BoolValue field value if set, zero value otherwise.
func (o *MetadataValueOneOf5) GetBoolValue() bool {
	if o == nil || IsNil(o.BoolValue) {
		var ret bool
		return ret
	}
	return *o.BoolValue
}

// GetBoolValueOk returns a tuple with the BoolValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataValueOneOf5) GetBoolValueOk() (*bool, bool) {
	if o == nil || IsNil(o.BoolValue) {
		return nil, false
	}
	return o.BoolValue, true
}

// HasBoolValue returns a boolean if a field has been set.
func (o *MetadataValueOneOf5) HasBoolValue() bool {
	if o != nil && !IsNil(o.BoolValue) {
		return true
	}

	return false
}

// SetBoolValue gets a reference to the given bool and assigns it to the BoolValue field.
func (o *MetadataValueOneOf5) SetBoolValue(v bool) {
	o.BoolValue = &v
}

func (o MetadataValueOneOf5) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataValueOneOf5) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BoolValue) {
		toSerialize["bool_value"] = o.BoolValue
	}
	return toSerialize, nil
}

type NullableMetadataValueOneOf5 struct {
	value *MetadataValueOneOf5
	isSet bool
}

func (v NullableMetadataValueOneOf5) Get() *MetadataValueOneOf5 {
	return v.value
}

func (v *NullableMetadataValueOneOf5) Set(val *MetadataValueOneOf5) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataValueOneOf5) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataValueOneOf5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataValueOneOf5(val *MetadataValueOneOf5) *NullableMetadataValueOneOf5 {
	return &NullableMetadataValueOneOf5{value: val, isSet: true}
}

func (v NullableMetadataValueOneOf5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataValueOneOf5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
